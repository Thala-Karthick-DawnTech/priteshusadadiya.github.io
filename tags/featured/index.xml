<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>
	featured on Pritesh Usadadiya
	
	</title>
    <link>https://www.priteshusadadiya.com/tags/featured/</link>
    <description>Recent content 
	
	in featured on Pritesh Usadadiya
	</description>
    <generator>Hugo -- gohugo.io</generator>
	
	
    <copyright>Copyright © 2020, Pritesh Usadadiya</copyright>
    <lastBuildDate>Sat, 02 Nov 2019 00:00:00 +0000</lastBuildDate>
	
    
        <atom:link href="https://www.priteshusadadiya.com/tags/featured/index.xml" rel="self" type="application/rss+xml" />
    
	
    <item>
      <title>Posts</title>
      <link>https://www.priteshusadadiya.com/post/</link>
      <pubDate>Sat, 02 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.priteshusadadiya.com/post/</guid>
	  <description></description>
    </item>
    
    <item>
      <title>Real Time Performance Test Monitoring using JMeter, InfluxDB and Grafana</title>
      <link>https://www.priteshusadadiya.com/post/jmeter-grafana-influxdb/</link>
      <pubDate>Sat, 02 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.priteshusadadiya.com/post/jmeter-grafana-influxdb/</guid>
	  <description>&lt;p&gt;In this post we will see how easy it is to setup Jmeter to monitor Real Time test results using InfluxDB and Grafana.&lt;/p&gt;
&lt;p&gt;Jmeter provides a nonGUI mode to run performance test and it provides a nice summary result on console itself. you can certainly monitor test results on console and it works pretty well but if your test runs for hours then,&lt;/p&gt;
&lt;p&gt;it gets hard to analyze the summary results after a while.&lt;/p&gt;
&lt;p&gt;For ex, If I would like to know the active user count or response time over certain period, you have to go through the console summary output line by line.&lt;/p&gt;
&lt;p&gt;Another drawback is that results are in raw format which means you cannot just share it with the development/server team as the results are not in a very user-friendly format.&lt;/p&gt;
&lt;p&gt;To create graphs, Aggregrate Report, Error report you will need to wait for the JMeter test to finish.&lt;/p&gt;
&lt;p&gt;So, we can use JMeter’s Backend listener to send the results to an Influx database and visualize them in Grafana with nice chart by querying the DB.&lt;/p&gt;
&lt;h2 id=&#34;how-to-setup-and-prepare-influxdb-instance&#34;&gt;How to setup and prepare InfluxDB instance&lt;/h2&gt;
&lt;hr&gt;
&lt;/br&gt;
First, let’s [Download](https://portal.influxdata.com/downloads) the InfluxDB based on your system.
&lt;p&gt;Now, to start InfluxDB navigate to &lt;code&gt;/bin&lt;/code&gt; directory and double click the &lt;code&gt;influxd.exe&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;you will see a screen like below.&lt;/p&gt;
&lt;img src=&#34;https://www.priteshusadadiya.com/images/blog/08/1.png&#34; class=&#34;mx-auto d-block img-fluid&#34;&gt;
&lt;p&gt;After that We need to create a database for storing our JMeter load test data. In the &lt;code&gt;/bin&lt;/code&gt; directory double click &lt;code&gt;Influx.exe&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Let’s run the &lt;code&gt;SHOW DATABASES&lt;/code&gt; command – this will give you a list of databases.&lt;/p&gt;
&lt;p&gt;&lt;img class=&#34;mx-auto d-block img-fluid&#34; src=&#34;https://www.priteshusadadiya.com/images/blog/08/2.png&#34; &gt;&lt;/p&gt;
&lt;p&gt;To create a database Run the command: &lt;code&gt;CREATE DATABASE jmeterresults&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now let’s again run &lt;code&gt;SHOW DATABASES&lt;/code&gt; again and you should see your new database listed.&lt;/p&gt;
&lt;p&gt;&lt;img class=&#34;mx-auto d-block img-fluid&#34; src=&#34;https://www.priteshusadadiya.com/images/blog/08/3.png&#34; &gt;&lt;/p&gt;
&lt;p&gt;We are done with Influxdb.&lt;/p&gt;
&lt;h2 id=&#34;how-to-prepare-jmeter&#34;&gt;How to prepare Jmeter&lt;/h2&gt;
&lt;p&gt;Open Jmeter script in GUI mode, if you don’t have one right now, here is a sample script for BlazeDemo site.&lt;/p&gt;
&lt;p&gt;First, let’s add a new backend listener to the thread group&lt;/p&gt;
&lt;p&gt;In the Backend Listener Implementation dropdown,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;select `org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient` option. 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&#34;mx-auto d-block img-fluid&#34; src=&#34;https://www.priteshusadadiya.com/images/blog/08/4.png&#34; &gt;&lt;/p&gt;
&lt;p&gt;And Configure the parameters as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;influxdbMetricsSender – NO CHANGE 

influxdbUrl – this is the URL of InfluxDB is in the following format:  

                http://host_to_change:8086/write?db=jmeter.  

application – NO CHANGE 

measurement – NO CHANGE 

summaryOnly – NO CHANGE 

samplersRegexp – NO CHANGE 

percentiles – NO CHANGE 

testTitle – Title of the Test 

eventTags – NO CHANGE.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;As we have created the &lt;code&gt;“jmeterresults”&lt;/code&gt; database and we will be running it on a local machine with a default port, so in our case, the URL will be &lt;code&gt;http://127.0.0.1:8086/write?db=jmeterresults&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Okay, now let’s run the test for few minutes so that we can have some data to show on Grafana.&lt;/p&gt;
&lt;p&gt;We are done with the Listener Setup.&lt;/p&gt;
&lt;h2 id=&#34;how-to-prepare-grafana&#34;&gt;How to prepare Grafana&lt;/h2&gt;
&lt;p&gt;Download Grafana as per your system requirement.&lt;/p&gt;
&lt;p&gt;To start Grafana navigate to the &lt;code&gt;/bin&lt;/code&gt; directory and run grafana-server.exe. (If you have installed as a Windows &lt;code&gt;exe&lt;/code&gt; then there is no need to do this step as grafana will be started as default)&lt;/p&gt;
&lt;p&gt;Now let’s, open a browse and add following in URL Path: &lt;code&gt;http://localhost:3000&lt;/code&gt; ( default username/password = admin/admin )&lt;/p&gt;
&lt;p&gt;Click Add Data Source and choose &lt;code&gt;InfluxDB&lt;/code&gt; as the data source type.&lt;/p&gt;
&lt;p&gt;&lt;img class=&#34;mx-auto d-block img-fluid&#34; src=&#34;https://www.priteshusadadiya.com/images/blog/08/5.png&#34; &gt;&lt;/p&gt;
&lt;p&gt;Specify the URL: &lt;code&gt;http://localhost:8086&lt;/code&gt; and the name of the influxdb database: &lt;code&gt;jmeterresults&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Save the changes.&lt;/p&gt;
&lt;p&gt;&lt;img class=&#34;mx-auto d-block img-fluid&#34; src=&#34;https://www.priteshusadadiya.com/images/blog/08/6.png&#34; &gt;&lt;/p&gt;
&lt;p&gt;We have successfully created a DataSource instance and connected it with our database.&lt;/p&gt;
&lt;p&gt;Now for the Dashboard, Click &lt;code&gt;(+)&lt;/code&gt; icon located in menu bar panel and choose &lt;code&gt;Import&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&#34;mx-auto d-block img-fluid&#34; src=&#34;https://www.priteshusadadiya.com/images/blog/08/7.png&#34; &gt;&lt;/p&gt;
&lt;p&gt;Add &lt;code&gt;5496&lt;/code&gt; in Grafana.com Dashboard input field and click Load. (we are using this dashboard &lt;code&gt;https://grafana.com/grafana/dashboards/5496&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;Click anywhere outside the input box and you should be able see a dashboard detail.&lt;/p&gt;
&lt;p&gt;&lt;img class=&#34;mx-auto d-block img-fluid&#34; src=&#34;https://www.priteshusadadiya.com/images/blog/08/8.png&#34; &gt;&lt;/p&gt;
&lt;p&gt;On the import dashboard screen, we will be prompted for the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; Name – specify the dashboard name (optional) 

 Folder – NO CHANGE 

 DB name – select the InfluxDB data source as jmeterresults 

 Measurement name – NO CHANGE 

 Backend send interval – NO CHANGE
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We are done with Grafana setup.&lt;/p&gt;
&lt;p&gt;After above steps are cleared, we can run the test and see the results in the Grafana Dashboard in real time.&lt;/p&gt;
&lt;p&gt;&lt;img class=&#34;mx-auto d-block img-fluid&#34; src=&#34;https://www.priteshusadadiya.com/images/blog/08/9.png&#34; &gt;&lt;/p&gt;
&lt;p&gt;Hope this information can be useful.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is the Test Plan / Test Approach ? and how to prepare it ?</title>
      <link>https://www.priteshusadadiya.com/post/preparing-testplan-testschedule/</link>
      <pubDate>Sun, 16 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.priteshusadadiya.com/post/preparing-testplan-testschedule/</guid>
	  <description>&lt;p&gt;Test Documentation and planning were my least favorite things when I started my carrier. Mainly because Coding took preference above all others for me and I let others (read engineers at senior level) to take care of Test Planning and documentation. But as you progress more and more in your field, you start to get glimpse of why this things are important. There are lots of thing that we need to take care of in Testing of any Software.&lt;/p&gt;
&lt;p&gt;In this post, let me try to explain few points that everyone should follow when designing Test Process and Documentation of any given software product.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Creating the test Plan.&lt;/li&gt;
&lt;li&gt;Preparing the test schedule.&lt;/li&gt;
&lt;li&gt;Brief introduction of the different test types&lt;/li&gt;
&lt;li&gt;Exit criteria that should be full filled before any production release.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;how-to-prepare-the-test-plan--test-approach&#34;&gt;How to prepare the Test Plan / Test Approach.&lt;/h3&gt;
&lt;p&gt;There are lots of documents and various Matrices that are need to prepared for any project.&lt;/p&gt;
&lt;p&gt;__Why?__&lt;/br&gt; 
Because these documents are the essential to the Understanding of the project as these are the Blueprint of the entire application.&lt;/p&gt;
&lt;p&gt;As far as the QA is concerned Test Plan (also known as the Test Approach) also falls under the same category.&lt;/p&gt;
&lt;p&gt;So, lets break down the entire document process.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;In General Test Plan Includes the following data.

1. Test Scope
   - In Scope
   - Out of Scope
2. Test Schedule
3. Test Types
4. Test Environment
5. Test Approach
6. Exit Criteria
7. Open Risks/Issues
   - Risks
   - Issues
&lt;/code&gt;&lt;/pre&gt;&lt;/br&gt;
&lt;h4 id=&#34;1-test-scope&#34;&gt;1. Test Scope:&lt;/h4&gt;
&lt;p&gt;&amp;ldquo;Areas / Functionalities that will be included during the Test Cycle&amp;rdquo; is Known as a Test Scope.&lt;/p&gt;
&lt;p&gt;In Other words&lt;/p&gt;
&lt;blockquote class=&#34;blockquote&#34;&gt;
Test Scope is the process of defining what features and functionalities are required to be tested and then making sure all of defined features and functionalities are thoroughly verified.
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Let me give an example,&lt;/em&gt;&lt;/strong&gt;
There is a new requirement for Implementation for the smart search (Filtering the data based on the keywords entered by the end users).&lt;/p&gt;
&lt;p&gt;Now when this feature comes into the QA pool in a new Build then, entire focus of the Test should be this feature only and nothing else. This can be categories as a Test Scope.&lt;/p&gt;
&lt;p&gt;Now Imagine few other requirements which are also needed to be included into the next release so, these items will be included into the Test Scope for that release.&lt;/p&gt;
&lt;p&gt;Further the process can be divided into the 2 parts.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. In Scope: - Features / Functions that are to be tested
2. Out of Scopes: - Features / Functions not to be tested
&lt;/code&gt;&lt;/pre&gt;
&lt;/br&gt;
#### 2. Test Schedule: 
Everything that is to be tested should be as per the schedule (proposed and approved time frame on which deliverables are due). 
&lt;p&gt;Test schedule can include variety of the phases. Some of them are listed below,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;	A. Requirement Understanding
	B. Test Plan creation
	C. Test Cases creation
	D. Test Execution in Different Environments
	E. QA Sign-off*
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You will have to provide the Start Date and End Date for Every Phase respectively,&lt;/p&gt;
&lt;p&gt;Below is the description of the phases which can be helpful for identifying the potential start and end dates for every phase.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;A. Requirement Understanding&lt;/em&gt;&lt;/strong&gt; : There are few things that needs to be happen before this stage can begin like,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. All the requirements should be clear and properly documented.
2. All Support document should be available.
3. Basic structure of the given requirements should be available, 
	like wire-frames, Design mocks, Data flow etc.
&lt;/code&gt;&lt;/pre&gt;&lt;/br&gt;
- Most of time frames for different phases can be derived from the requirements itself, if above three things are followed properly. &lt;/br&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;B. Test Plan Creation&lt;/em&gt;&lt;/strong&gt;: How much time it will take to prepare this document itself?&lt;/p&gt;
&lt;p&gt;For every phase of the Test Schedule &lt;em&gt;&lt;em&gt;&amp;ldquo;Requirement Understanding&amp;rdquo;&lt;/em&gt;&lt;/em&gt; is the part where you will actually know the efforts it will take to get things done.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;C. Test Cases creation&lt;/em&gt;&lt;/strong&gt;: Once Requirements are fixed and documented properly, you will be able to draft test case easily from them and also be able to provide time frame for the same.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;D. Test Cases Execution&lt;/em&gt;&lt;/strong&gt;: Now this is a bit tricky part as this will depend on the details of different Environment to be tested.&lt;/p&gt;
&lt;p&gt;for example, if you are running the one test on Chrome, Firefox, IE and also on 5 Different devices then you will have a one test cases which executes 8 time in one Cycle.	
&lt;/br&gt;&lt;/br&gt;With that in mind and other details like,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;	- How May Test Cycle you are performing?
 	- What is the Scope of each Cycle? 
	- Each cycle can take different amount of time to complete. 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Will determine the time taken for each test cycle.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;for example&lt;/em&gt;&lt;/strong&gt;, first cycle will always be somewhat longer than the second because probability of finding the bugs/Defects are high in the first Iteration.
As cycle changes, amount bugs/Defects found during each Iteration will get smaller.&lt;/p&gt;
&lt;p&gt;Based on the above details you can find the possible start and End Date of the Test Case Execution.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;E. QA Sign-off&lt;/em&gt;&lt;/strong&gt;: How do you determine that testing is complete? obviously you’ll need some kind of criteria to make sure that you’re confident that application under test works as intended. 
This criteria will be set as a pre-agreed upon exit gate definition, and once met testing will be completed.&lt;/p&gt;
&lt;/br&gt;
#### 3. Test Types / categories:
The overall application will include the following testing types/techniques*: 
&lt;p&gt;The below list of test depth/test techniques are used to assess application quality:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-	1. FT: Feature &amp;gt; Basic Feature Testing
-	2. G: GUI &amp;gt; Validate look and feel of the application
-	3. DB: Database &amp;gt; Verify DB interaction and CRUD procedures
-	4. E2E: End to End &amp;gt; Validate E2E business flows and system interaction
-	5. BR: Business Rule &amp;gt; Validate specific business rules with positive/negative conditions
-	6. SVC: Service Level Testing &amp;gt; Validate web service level features 
		(i.e. API`s, WS calls, etc.)
-	7. EH: Error Handling &amp;gt; Validate Application Error handling
-	8. BVA: Boundary Value Analysis &amp;gt; Review boundary values for feature/system interaction
-	9. ST: State Transition &amp;gt; Validate application state 
		(i.e. workflow, session, restful state validation, etc.)
-	10. BT: Branch Tree/Decision Matrix &amp;gt; Validate inputs/outputs of a group of rules 
-	11. DF: Data Flow &amp;gt; Validate system interaction
		with a concentration on ETL and CRUD procedures between system components
&lt;/code&gt;&lt;/pre&gt;&lt;/br&gt;
#### 4. Test Environment:
List of all the Environments on which Test cases will be executed.
&lt;/br&gt;
#### 5. Test Approach: 
Here you should provide description of the features and other items to be tested along with the overall depth of testing and test methods used to discover defects.
&lt;/br&gt;
#### 6. Exit Criteria: 
Exit criteria must be met before sign-off for production release will be provided by QA.
&lt;p&gt;In another words &amp;ldquo;All things that should be done before providing the sign-off is known as an Exit Criteria&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Here are some examples of exit criteria&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;	1. All Sprint Stories/Items Accepted by QA and it is Ready for Production
	2. Manual Regression Tests (Blocker and Critical Test Cases) have passed
	3. No Critical or Blocker defects outstanding.
	4. Automation Regression Suite Successfully Passed.
	5. Performance Tests executed successfully.
	6. Browser Compatibility works as expected.
&lt;/code&gt;&lt;/pre&gt;&lt;/br&gt;
- If Possible include all of the above and have one field to mark if criteria are applicable or not. If yes, then mark it &#34;Yes&#34; and &#34;No&#34; otherwise. &lt;/br&gt;
- Also provide comments against each criteria for better understanding.
&lt;h4 id=&#34;7-open-risks-or-issues&#34;&gt;7. Open Risks or Issues:&lt;/h4&gt;
&lt;p&gt;Include all the bugs / Issues that are not fixed yet.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add the appropriate linking of the issues with their description and priority.&lt;/li&gt;
&lt;li&gt;This information is critical and can have an effect on if Build should go into the next phase (Production release) or not.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hope this information can be useful. &lt;/br&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Browser Extensions for everyday QA Testing</title>
      <link>https://www.priteshusadadiya.com/post/browser-plugins-for-every-testers/</link>
      <pubDate>Wed, 29 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.priteshusadadiya.com/post/browser-plugins-for-every-testers/</guid>
	  <description>&lt;p&gt;We all need toolkit that makes our jobs a little bit easier. As a QE there are several chrome extensions that i use everyday that boosts my productivity and reduces chunk of extra workload Here are all of them.&lt;/p&gt;
&lt;a class=&#34;title&#34; href=&#34;https://chrome.google.com/webstore/detail/blazemeter-the-continuous/mbopgmdnpcbohhpnfglgohlbhfongabi?hl=en&#34; target=&#34;_blank&#34;&gt;
&lt;h4&gt;BlazeMeter | The Continuous Testing Platform&lt;/h4&gt;
&lt;/a&gt;
BlazeMeter plugin is easiest way to record your performance script in jmeter
&lt;a class=&#34;title&#34; href=&#34;https://chrome.google.com/webstore/detail/bug-magnet/efhedldbjahpgjcneebmbolkalbhckfi?hl=en&#34; target=&#34;_blank&#34;&gt;
&lt;h4&gt;Bug Magnet&lt;/h4&gt;
&lt;/a&gt;
&lt;p&gt;This is a handy tool for doing exploratory testing. it&#39;s &lt;a href=&#34;https://github.com/gojko/bugmagnet&#34;&gt;opensorce&lt;/a&gt; and provides you with range of test data to check edge cases of your app.&lt;/p&gt;
&lt;a class=&#34;title&#34; href=&#34;https://chrome.google.com/webstore/detail/check-my-links/ojkcdipcgfaekbeaelaapakgnjflfglf?hl=en&#34; target=&#34;_blank&#34;&gt;
&lt;h4&gt;Check My Links&lt;/h4&gt;
&lt;/a&gt;
&lt;p&gt;It&#39;s a  link checker that crawls through your webpage and looks for broken links.&lt;/p&gt;
&lt;a class=&#34;title&#34; href=&#34;https://chrome.google.com/webstore/detail/exploratory-testing-chrom/khigmghadjljgjpamimgjjmpmlbgmekj?hl=en&#34; target=&#34;_blank&#34;&gt;
&lt;h4&gt;Exploratory Testing Chrome Extension&lt;/h4&gt;
&lt;/a&gt;
&lt;p&gt;Another must have plugin for Exploratory Testing. you can gp page by page take a screenshot and write bugs, ideas, notes etc..&lt;/p&gt;
&lt;a class=&#34;title&#34; href=&#34;https://chrome.google.com/webstore/detail/note-anywhere/bohahkiiknkelflnjjlipnaeapefmjbh?hl=en&#34; target=&#34;_blank&#34;&gt;
&lt;h4&gt;Note Anywhere&lt;/h4&gt;
&lt;/a&gt;
&lt;p&gt;How many time you have browse through a article had some thoughts and forgot after some time. Well no more.&lt;/p&gt;
&lt;p&gt;with this extension, you can create notes on any web page and when you open that page again, the notes will get loaded automatically.&lt;/p&gt;
&lt;a class=&#34;title&#34; href=&#34;https://chrome.google.com/webstore/detail/page-load-time/fploionmjgeclbkemipmkogoaohcdbig?hl=en&#34; target=&#34;_blank&#34;&gt;
&lt;h4&gt;Page load time&lt;/h4&gt;
&lt;/a&gt;
&lt;p&gt;Quickly need to check the loading time for your webpage ? there is a extension for it.&lt;/p&gt;
&lt;a class=&#34;title&#34; href=&#34;https://chrome.google.com/webstore/detail/screencastify-screen-vide/mmeijimgabbpbgpdklnllpncmdofkcpn?hl=en&#34; target=&#34;_blank&#34;&gt;
&lt;h4&gt;Screencastify - Screen Video Recorder&lt;/h4&gt;
&lt;/a&gt;
&lt;p&gt;I use this plugin to record product workflows, bugs etc&amp;hellip;&lt;/p&gt;
&lt;p&gt;In Free tire it gives you 50 recordings per month with max 10 min. recording per session. you can download saved videos from Google drive or export it as gifs.&lt;/p&gt;
&lt;p&gt;I have been using it for some time and never needed to upgrade to paid plan.&lt;/p&gt;
&lt;a class=&#34;title&#34; href=&#34;https://chrome.google.com/webstore/detail/whatfont/jabopobgcpjmedljpbcaablpmlmfcogm?hl=en&#34; target=&#34;_blank&#34;&gt;
&lt;h4&gt;WhatFont&lt;/h4&gt;
&lt;/a&gt;
&lt;p&gt;Easiest way to find what kind of font is being used on any portion of webpage without going into the details of devtools.&lt;/p&gt;
&lt;p&gt;And of course my all time favourite&lt;/p&gt;
&lt;a class=&#34;title&#34; href=&#34;https://developers.google.com/web/tools/chrome-devtools/&#34; target=&#34;_blank&#34;&gt;
&lt;h4&gt;Chrome DevTools&lt;/h4&gt;
&lt;/a&gt;
&lt;/br&gt;
___
&lt;/br&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Continue reading about various other plug-ins that Software Developers uses everyday.&lt;/em&gt;&lt;/strong&gt;
&lt;a href=&#34;https://dev.to/priteshusadadiya/browser-plugins-that-you-cant-live-without-27l8&#34;&gt;What are some Browser plugins that you can&#39;t live without ?&lt;/a&gt;&lt;/p&gt;
&lt;/br&gt;</description>
    </item>
    
    <item>
      <title>Noobs introduction to Cloud and Virtual Machine</title>
      <link>https://www.priteshusadadiya.com/post/cloud-and-vm/</link>
      <pubDate>Sun, 17 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.priteshusadadiya.com/post/cloud-and-vm/</guid>
	  <description>&lt;p&gt;As a beginner in development (specially in web development)do you know What does cloud and VM actually mean ? and Why do we need them ?&lt;/p&gt;
&lt;Center&gt;&lt;sup&gt;[Cover Image source](https://pixabay.com/en/cloud-computer-backup-technology-3998880/) by [katielwhite91](https://pixabay.com/en/users/katielwhite91-5572368/)&lt;/sup&gt;&lt;/center&gt;
&lt;h1 id=&#34;cloud&#34;&gt;Cloud&lt;/h1&gt;
&lt;p&gt;Reach of internet is ever expanding and with that every day new users are getting added and connected to rest of the the world.&lt;/p&gt;
&lt;p&gt;Concept of cloud computing has came from the same need. To increase the processing power of your applications so that it can reach to the end user in every corner of the world easily.&lt;/p&gt;
&lt;p&gt;No matter if you are a developer , Business owner , engineer or independent blogger. As your user base increases you will need to bring more reliable and effective system to handle this ever growing traffic and provide smooth and fast access to your product.&lt;/p&gt;
&lt;h3 id=&#34;so-where-does-the-cloud-computers-fit-into-this-&#34;&gt;So where does the cloud computers fit into this ?&lt;/h3&gt;
&lt;p&gt;As you might probably know that everything that exists on internet is stored on variety of devices known as the Servers.&lt;/p&gt;
&lt;p&gt;Now when you want to launch a digital product no matter how big or small you will need to put it on the highly reliable servers for better performance.&lt;/p&gt;
&lt;h4 id=&#34;lets-take-a-example-of-jack&#34;&gt;Lets take a example of jack&lt;/h4&gt;
&lt;p&gt;Jack runs a person blog where he talks abut the investment In stock market. He runs this blog on his own server.&lt;/p&gt;
&lt;p&gt;He has just started this new blog and the number of visitors on his blog are limited to 50 to 500. In this particular case jacks own server is more that enough to handle that load. he is doing perfectly fine.&lt;/p&gt;
&lt;p&gt;After couple months his visitor count gets increased from 1000 to 10000 per day and now his server are getting exhausted because of the increased traffic , so jack decides to increase his hardware (Hard disk , Ram , Processor) and he buys new stuff and upgrades his server.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;After several months guess what happens ?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;yup , you guessed it right . visitors count of the blog has gone way up and Jack is in trouble(again).&lt;/p&gt;
&lt;h4 id=&#34;do-you-see-the-problem-here--here-are-couple-of-them&#34;&gt;Do you see the problem here ? here are couple of them.&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Jack will have to buy more stuff and upgrade his server manually every few months.&lt;/li&gt;
&lt;li&gt;Computer Hardware is not chip. He will need considerable amount of funds.&lt;/li&gt;
&lt;li&gt;Jack will have to take care of the server on his own. you know the regular clean up , software updates , Maintenance etc..&lt;/li&gt;
&lt;li&gt;Point 3 is hard job because it takes up a lot of time so jack will have to manage between blogging and maintaining his servers.&lt;/li&gt;
&lt;li&gt;At some point if jack decided to sell/close his blog then what will he do with all the servers that he has setup manually ? do he sell it ? Keep with him in-case in future he decides to restart his blogging ?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now Jack can do all the above by himself or let some one else do it. And by doing so he will save much of this otherwise wasted resources and time.&lt;/p&gt;
&lt;h4 id=&#34;better-option-for-jack-is-to-turn-to-cloud-computing&#34;&gt;Better option for Jack is to turn to Cloud Computing&lt;/h4&gt;
&lt;p&gt;So let&#39;s see how cloud computing will save jack.&lt;/p&gt;
&lt;blockquote class=&#34;blockquote&#34;&gt;
Cloud computing is an information technology (IT) paradigm that enables ubiquitous access to shared pools of configurable system resources and higher-level services that can be rapidly provisioned with minimal management effort, often over the Internet. Cloud computing relies on sharing of resources to achieve coherence and economies of scale, similar to a public utility - Wikipedia
&lt;/blockquote&gt;
&lt;h2 id=&#34;in-other-words-you-pay-for-what-you-use&#34;&gt;In other words &amp;ldquo;You pay for what you use&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;With cloud computing jack will be able to add or remove the resources like hard disks , processors , ram etc.. as per his need. And this resources will exists with the cloud service providers so that he will be able to carry on with his work with less management effort and will be able to more focus on his product.&lt;/p&gt;
&lt;h3 id=&#34;do-you-know-who-are-these-service-provides-&#34;&gt;Do you know who are these service provides ?&lt;/h3&gt;
&lt;p&gt;Many companies in the industry are specialized in the cloud computing like Amazon , Microsoft , Google , Alibaba etc&amp;hellip;&lt;/p&gt;
&lt;p&gt;You can buy the server space with this service providers and they will take care of the rest. Your basic needs are taken care of and you are free to focus just on your product. and if need arises to increase your hardware.. Well then you are just few clicks away..&lt;/p&gt;
&lt;h1 id=&#34;virtual-machine&#34;&gt;Virtual Machine&lt;/h1&gt;
&lt;/br&gt;
### Do you know what Virtual Machine is ?
In Layman&#39;s terms VM is a emulation of the computer. Lets see a example to understand what does it mean ?
&lt;p&gt;Suppose you are using a Windows Machine right now and suddenly you need a Ubuntu OS on your system. now what will you do ? Would you remove windows and install Ubuntu ? or buy a new system and install it there ?&lt;/p&gt;
&lt;p&gt;Simple answer is &lt;strong&gt;NO&lt;/strong&gt; for both option.&lt;/p&gt;
&lt;p&gt;What you will do is that you will install a software like &lt;strong&gt;virtual box&lt;/strong&gt; that allows you to run more than one operating system at a time and once software is installed you can install and use Ubuntu in that environment without compromising your current system architecture.&lt;/p&gt;
&lt;p&gt;This environment is called &lt;strong&gt;&lt;strong&gt;virtual Machine&lt;/strong&gt;&lt;/strong&gt; .&lt;/p&gt;
&lt;p&gt;Now i think you will have a better understanding of what is cloud and why do we use it.&lt;/p&gt;
&lt;p&gt;Thanks for reading.&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;This is a small portion of &lt;a href=&#34;https://medium.com/@priteshusdadiya/advancing-the-future-of-cloud-computing-with-crowd-machine-72d9f324239d&#34;&gt;article&lt;/a&gt; i published a long time ago&lt;/sup&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Customizing RSS Feed for Hugo Blog</title>
      <link>https://www.priteshusadadiya.com/post/custom-rss-feed/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.priteshusadadiya.com/post/custom-rss-feed/</guid>
	  <description>&lt;p&gt;Hugo ships with its own &lt;code&gt;RSS 2.0&lt;/code&gt; template that requires almost no configuration, or you can create your own RSS templates.&lt;/p&gt;
&lt;p&gt;However, there are few basic limitations to this like having complete &lt;code&gt;rss&lt;/code&gt; feed, all pages and posts gets included, only summary of each post is included with RSS feed.
So when you implement default &lt;code&gt;rss&lt;/code&gt; feed then you also limit your &lt;code&gt;RSS feed&lt;/code&gt; for your blog with above parameters.&lt;/p&gt;
&lt;p&gt;Answer to this is to create your own &lt;code&gt;RSS&lt;/code&gt; template.&lt;/p&gt;
&lt;h2 id=&#34;how-to-create-custom-rss-template-for-hugo&#34;&gt;How to create custom RSS Template for Hugo.&lt;/h2&gt;
&lt;p&gt;Below is the RSS template for Hugo. Copy below code into file, name it as &lt;code&gt;rss.xml&lt;/code&gt; and save this file into default directory of layouts i.e. &lt;code&gt;layouts\_default&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;rss version=&amp;quot;2.0&amp;quot; xmlns:atom=&amp;quot;http://www.w3.org/2005/Atom&amp;quot;&amp;gt;
  &amp;lt;channel&amp;gt;
    &amp;lt;title&amp;gt;
	{{ if eq  .Title  .Site.Title }}{{ .Site.Title }}{{ else }}{{ with .Title }}{{.}} on {{ end }}
	{{ .Site.Title }}{{ end }}
	&amp;lt;/title&amp;gt;
    &amp;lt;link&amp;gt;{{ .Permalink }}&amp;lt;/link&amp;gt;
    &amp;lt;description&amp;gt;Recent content {{ if ne  .Title  .Site.Title }}{{ with .Title }}in {{.}} 
	{{ end }}{{ end }}on {{ .Site.Title }}&amp;lt;/description&amp;gt;
    &amp;lt;generator&amp;gt;Hugo -- gohugo.io&amp;lt;/generator&amp;gt;{{ with .Site.LanguageCode }}
    &amp;lt;language&amp;gt;{{.}}&amp;lt;/language&amp;gt;{{end}}{{ with .Site.Author.email }}
    &amp;lt;managingEditor&amp;gt;{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}&amp;lt;/managingEditor&amp;gt;
	{{end}}
	{{ with .Site.Author.email }}
    &amp;lt;webMaster&amp;gt;{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}&amp;lt;/webMaster&amp;gt;
	{{end}}
	{{ with .Site.Copyright }}
    &amp;lt;copyright&amp;gt;{{.}}&amp;lt;/copyright&amp;gt;{{end}}{{ if not .Date.IsZero }}
    &amp;lt;lastBuildDate&amp;gt;{{ .Date.Format &amp;quot;Mon, 02 Jan 2006 15:04:05 -0700&amp;quot; | safeHTML }}&amp;lt;/lastBuildDate&amp;gt;
	{{ end }}
    {{ with .OutputFormats.Get &amp;quot;RSS&amp;quot; }}
        {{ printf &amp;quot;&amp;lt;atom:link href=%q rel=\&amp;quot;self\&amp;quot; type=%q /&amp;gt;&amp;quot; .Permalink .MediaType | safeHTML }}
    {{ end }}
    {{ range .Pages }}
    &amp;lt;item&amp;gt;
      &amp;lt;title&amp;gt;{{ .Title }}&amp;lt;/title&amp;gt;
      &amp;lt;link&amp;gt;{{ .Permalink }}&amp;lt;/link&amp;gt;
      &amp;lt;pubDate&amp;gt;{{ .Date.Format &amp;quot;Mon, 02 Jan 2006 15:04:05 -0700&amp;quot; | safeHTML }}&amp;lt;/pubDate&amp;gt;
      {{ with .Site.Author.email }}&amp;lt;author&amp;gt;{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}&amp;lt;/author&amp;gt;{{end}}
      &amp;lt;guid&amp;gt;{{ .Permalink }}&amp;lt;/guid&amp;gt;
      &amp;lt;description&amp;gt;{{ .Summary | html }}&amp;lt;/description&amp;gt;
    &amp;lt;/item&amp;gt;
    {{ end }}
  &amp;lt;/channel&amp;gt;
&amp;lt;/rss&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/br&gt;
## How to add entire post instead of just description in RSS Feed.
By default only post description will be included in `RSS` feed so if you want to add full post in feed you will have to make some changes 
&lt;p&gt;Change this&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;description&amp;gt;{{ .Summary | html }}&amp;lt;/description&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;to this&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;description&amp;gt;{{ .Content | html }}&amp;lt;/description&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/br&gt;
## Exclude other custom pages and only include **`posts`** in RSS Feed
By Default everything on your Hugo site will get transmitted over RSS feed including your custom pages which are not the part of your blog posts.
To exclude these and include only `posts` make below change in your `rss.xml` file
&lt;p&gt;Change below line&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ range .Pages }}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;With this&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ range .Pages &amp;quot;Section&amp;quot; &amp;quot;post&amp;quot; }}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This will exclude all single and separate pages from your &lt;code&gt;RSS&lt;/code&gt; Feed&lt;/p&gt;
&lt;/br&gt;
## Limit the feed with certain no. of posts.
You can also limit the total no. of posts that broadcasts with `RSS` feed by using below code.
&lt;pre&gt;&lt;code&gt;{{ range first 15 .Pages}}
&lt;/code&gt;&lt;/pre&gt;&lt;/br&gt;
### So, lets see what we can do by combining all of the above 
&lt;pre&gt;&lt;code&gt;{{ range first 15 (where .Data.Pages &amp;quot;Section&amp;quot; &amp;quot;post&amp;quot;) }}
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;Above code will remove all other pages and add only blog posts and also limit posts number by 15 (only first 15 posts will broadcast)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;putting-it-all-together&#34;&gt;Putting it all together&lt;/h3&gt;
&lt;p&gt;At the end, here is how your &lt;code&gt;rss.xml&lt;/code&gt; file will look like,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;rss version=&amp;quot;2.0&amp;quot; xmlns:atom=&amp;quot;http://www.w3.org/2005/Atom&amp;quot;&amp;gt;
  &amp;lt;channel&amp;gt;
    &amp;lt;title&amp;gt;
	{{ if eq  .Title  .Site.Title }}
	{{ .Site.Title }}{{ else }}{{ with .Title }}{{.}} on {{ end }}{{ .Site.Title }}
	{{ end }}
	&amp;lt;/title&amp;gt;
    &amp;lt;link&amp;gt;{{ .Permalink }}&amp;lt;/link&amp;gt;
    &amp;lt;description&amp;gt;Recent content 
	{{ if ne  .Title  .Site.Title }}
	{{ with .Title }}in {{.}} {{ end }}{{ end }}on {{ .Site.Title }}
	&amp;lt;/description&amp;gt;
    &amp;lt;generator&amp;gt;Hugo -- gohugo.io&amp;lt;/generator&amp;gt;{{ with .Site.LanguageCode }}
    &amp;lt;language&amp;gt;{{.}}&amp;lt;/language&amp;gt;{{end}}{{ with .Site.Author.email }}
    &amp;lt;managingEditor&amp;gt;{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}&amp;lt;/managingEditor&amp;gt;
	{{end}}
	{{ with .Site.Author.email }}
    &amp;lt;webMaster&amp;gt;{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}&amp;lt;/webMaster&amp;gt;
	{{end}}
	{{ with .Site.Copyright }}
    &amp;lt;copyright&amp;gt;{{.}}&amp;lt;/copyright&amp;gt;{{end}}{{ if not .Date.IsZero }}
    &amp;lt;lastBuildDate&amp;gt;{{ .Date.Format &amp;quot;Mon, 02 Jan 2006 15:04:05 -0700&amp;quot; | safeHTML }}&amp;lt;/lastBuildDate&amp;gt;
	{{ end }}
    {{ with .OutputFormats.Get &amp;quot;RSS&amp;quot; }}
        {{ printf &amp;quot;&amp;lt;atom:link href=%q rel=\&amp;quot;self\&amp;quot; type=%q /&amp;gt;&amp;quot; .Permalink .MediaType | safeHTML }}
    {{ end }}
    {{ range first 15 (where .Data.Pages &amp;quot;Section&amp;quot; &amp;quot;post&amp;quot;) }}
    &amp;lt;item&amp;gt;
      &amp;lt;title&amp;gt;{{ .Title }}&amp;lt;/title&amp;gt;
      &amp;lt;link&amp;gt;{{ .Permalink }}&amp;lt;/link&amp;gt;
      &amp;lt;pubDate&amp;gt;{{ .Date.Format &amp;quot;Mon, 02 Jan 2006 15:04:05 -0700&amp;quot; | safeHTML }}&amp;lt;/pubDate&amp;gt;
      {{ with .Site.Author.email }}&amp;lt;author&amp;gt;{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}&amp;lt;/author&amp;gt;{{end}}
      &amp;lt;guid&amp;gt;{{ .Permalink }}&amp;lt;/guid&amp;gt;
	  &amp;lt;description&amp;gt;{{ .Content | html }}&amp;lt;/description&amp;gt;
    &amp;lt;/item&amp;gt;
    {{ end }}
  &amp;lt;/channel&amp;gt;
&amp;lt;/rss&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Hope this information can be useful.&lt;/br&gt;
Cheers 👋&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hosting Hugo site on Github Pages with Custom Domain</title>
      <link>https://www.priteshusadadiya.com/post/hosting-on-github-custom-domain/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.priteshusadadiya.com/post/hosting-on-github-custom-domain/</guid>
	  <description>&lt;p&gt;As Sites created with HUGO will be static site and Github provides a free hosting for static website, we are going to use &lt;a href=&#34;https://help.github.com/articles/what-is-github-pages/&#34;&gt;Github Pages&lt;/a&gt;.&lt;/p&gt;
&lt;/br&gt;
## Create a Github Repository and Clone it Locally
First thing we need to do is to Create 2 Project repositories on GitHub. Name your first repository with exact name as your website directory `YourProjectNanme` (Project that you created in your local machine) and for the second one,name it as **\&lt;YourUserName\&gt;.github.io**. This repository will contain static content created with Hugo.
&lt;p&gt;Now, pull those repos to your local machine&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd &amp;lt;YourProjectNanme&amp;gt;
git clone https://github.com/YOUR-USERNAME/YOUR-REPOSITORY.git
cd YourUserName.github.io
git clone https://github.com/YOUR-USERNAME/YourUserName.github.io.git
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Initialize your &lt;code&gt;&amp;lt;YourProjectNanme&amp;gt;&lt;/code&gt; folder with below Command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And repo remotely with &lt;code&gt;remote&lt;/code&gt; and &lt;code&gt;add&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git remote add origin https://github.com/YOUR-USERNAME/YourProjectName.git
git pull origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/br&gt;
## Edit Config File
&lt;p&gt;Before we commit our changes we need to edit &lt;code&gt;config.toml&lt;/code&gt; (Located in Root Directory of your Project &amp;lsquo;YourProjectName&amp;rsquo;) and change Base URL.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;baseurl = &amp;quot;https://YourUserName.github.io&amp;quot; // Change YourUserName with your GIthub Username 
--- OR ---
baseurl = &amp;quot;https://MySpecialDomainName.com&amp;quot; // Custom Domain Name 
&lt;/code&gt;&lt;/pre&gt;&lt;/br&gt;
## Generate static content
Now lets generate static content with Hugo
```
hugo -d ../YourUserName.github.io
```
And now Push our Hugo Code to github repository
&lt;pre&gt;&lt;code&gt;cd YourProjectName
git add .
git commit -m &amp;quot;your message&amp;quot;
git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And Push Static content to github&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd YourUserName.github.io
git add .
git commit -m &amp;quot;your message&amp;quot;
git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/br&gt;
# Configuring Custom Domain
&lt;p&gt;In order to use custom domain with our gitthub pages, we will have to configure &lt;code&gt;A&lt;/code&gt; records for our domain (you can do this wil help of DNS Provider)&lt;/p&gt;
&lt;p&gt;Add below IP address as a  &lt;code&gt;A&lt;/code&gt; records on your domain.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;185.199.108.153
185.199.109.153
185.199.110.153
185.199.111.153
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;There are two way to add custom domain to our project.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a CNAME file in our root directory of the project&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;Settings&lt;/code&gt; option from github project repo and add a custom domain.&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;we-are-going-with-option-2&#34;&gt;We are going with option 2&lt;/h5&gt;
&lt;/br&gt;
Open your github project repo **YourUserName.github.io** and navigate to settings page.Scroll down untill you see **GitHub Pages** section and there will be a option to add custom domain there.
&lt;p&gt;Add your custom domain and click on save button.There is a also another check box &lt;code&gt;Enforce HTTPS&lt;/code&gt;. check it (It will provide a layer of encryption and your site will be viewed over &lt;code&gt;HTTPS&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;If you are using a &lt;code&gt;www&lt;/code&gt; sub-domain, there are chances that you might not be able to check the &lt;code&gt;Enforce HTTPS&lt;/code&gt; check-box.
I was also receiving a &lt;a href=&#34;https://dev.to/priteshusadadiya/privacy-error-with-custom-domain-in-and-github-pages-2ll2&#34;&gt;Privacy error with custom domain&lt;/a&gt; and i solved it by changing a DNS record.&lt;/p&gt;
&lt;p&gt;I had added the CNAME record (you can add this using DNS Provider)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;www CNAME priteshusadadiya.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Problem with above is that I was redirecting my &lt;code&gt;www&lt;/code&gt; sub-domain to my apex(main) domain.&lt;/p&gt;
&lt;p&gt;I Solved this issue by changing my CNAME record to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;www CNAME YourUserName.github.io // add your github.io url here
&lt;/code&gt;&lt;/pre&gt;&lt;/br&gt;
#### It takes around 48 hours for Github to generate HTTPS certificate on custom domain so, you might want to wait for it.
&lt;p&gt;&lt;/br&gt;&lt;/br&gt;
🙌 &lt;strong&gt;Congratulations,&lt;/strong&gt; your website is now live and can be seen at  &lt;strong&gt;&amp;lt;YourUserName&amp;gt;.github.io&lt;/strong&gt;&lt;/p&gt;
&lt;h5 id=&#34;a-note&#34;&gt;A Note:&lt;/h5&gt;
&lt;p&gt;I am documenting this entire process just in case i might need it in future. Maybe this can be useful to you too.&lt;/p&gt;
&lt;p&gt;Happy Coding.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Building Newsletter and contact forms for Hugo site.</title>
      <link>https://www.priteshusadadiya.com/post/adding-newsletter-to-hugo-blog/</link>
      <pubDate>Sat, 09 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.priteshusadadiya.com/post/adding-newsletter-to-hugo-blog/</guid>
	  <description>&lt;p&gt;Hugo is a static site generator , which means everything in your website is static html pages. So if you want to gather emails from your visitors for building a newsletter or contact form to gather more data ? How will you go about it ?&lt;/p&gt;
&lt;p&gt;Maybe you can use emails service like mailchimp or tinyletters or other xyz service to gather that or there is a another easy way to do it hassle free (at-least I think so)&lt;/p&gt;
&lt;p&gt;First thing you need is a simple HTML form that contains one or more input fields.&lt;/p&gt;
&lt;p&gt;There is an opensource product named &lt;a href=&#34;https://github.com/formspree/formspree&#34;&gt;FORMSPREE&lt;/a&gt; that you can use to build your newsletter and contact forms.&lt;/p&gt;
&lt;p&gt;There is no need to setup any third part plugins or any kind of registration for that. all you need is an email address.&lt;/p&gt;
&lt;p&gt;First thing you have to do is add below line to your form to connect it to &lt;code&gt;FORMSPREE&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;form action=&amp;quot;https://formspree.io/your@email.com&amp;quot; method=&amp;quot;POST&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Second thing is to add &lt;code&gt;name&lt;/code&gt; attribute to all of your form elements.&lt;/p&gt;
&lt;p&gt;And the last thing is to confirm email.  you have to submit the form once yourself.This first-time-use will trigger an email requesting confirmation.&lt;/p&gt;
&lt;p&gt;Here is how the complete form looks like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;form method=&amp;quot;POST&amp;quot; action=&amp;quot;https://formspree.io/your@email.com&amp;quot;&amp;gt;
  &amp;lt;input type=&amp;quot;email&amp;quot; name=&amp;quot;email&amp;quot; placeholder=&amp;quot;Your email&amp;quot;&amp;gt;
  &amp;lt;textarea name=&amp;quot;message&amp;quot; placeholder=&amp;quot;Test Message&amp;quot;&amp;gt;&amp;lt;/textarea&amp;gt;
  &amp;lt;button type=&amp;quot;submit&amp;quot;&amp;gt;Send Test&amp;lt;/button&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Do this and you are done. Congratulations!&amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;one-important-thing&#34;&gt;One Important Thing:&lt;/h3&gt;
&lt;p&gt;Now you have build a contact from to collect emails and feedback and ready to go , what&#39;s next ?&lt;/p&gt;
&lt;p&gt;Now suppose you write /post your content on multiple platforms so, you can&#39;t just use same form everywhere how will you identify what email/data came from which channel ?&lt;/p&gt;
&lt;p&gt;Would you use different emails for different platforms ? that sounds messy.&lt;/p&gt;
&lt;h3 id=&#34;so-what-can-we-do-&#34;&gt;So what can we do ?&lt;/h3&gt;
&lt;p&gt;The answer is to utilize hidden type of form elements.
like ,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;input type=&amp;quot;hidden&amp;quot; name=&amp;quot;NameofPlatfrom&amp;quot; Value=&amp;quot;AddSomeValueHere&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;With this, form element will be hidden and will not get displayed to end user but , once form is submitted it will send value of this hidden field as well.&lt;/p&gt;
&lt;p&gt;Now you can successfully distinguish sources of your contact data.&lt;/p&gt;
&lt;h3 id=&#34;remember&#34;&gt;Remember:&lt;/h3&gt;
&lt;p&gt;Make sure you don&#39;t use same name property more that once in single form. This will confuse the api and users will receive an error and you won&#39;t get any data.&lt;/p&gt;
&lt;p&gt;There are other couple of features of &lt;code&gt;FORMSPREE&lt;/code&gt; for more advanced configuration but it&#39;s paid and i haven&#39;t used it. Hence , not included here. But you can &lt;a href=&#34;https://github.com/formspree/formspree&#34;&gt;check it out here&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creating a blog with Hugo static site Generator</title>
      <link>https://www.priteshusadadiya.com/post/creatingablog/</link>
      <pubDate>Wed, 06 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.priteshusadadiya.com/post/creatingablog/</guid>
	  <description>&lt;p&gt;It has been long time since i wanted to start a blog and host it with my own Custom domain.Truth to be told , I am a lazy blogger - I only write occasionally.&lt;/p&gt;
&lt;p&gt;Originally I wanted to setup my blog on Wordpress but configuring and hosting a blog on VPS server (no mater how cheap) , requires regular maintenance on monthly basis.&lt;/p&gt;
&lt;p&gt;Add that with Keeping server up-to-date to avoid any risks, backups etc&amp;hellip; just seems extra work that i really don&#39;t want to do.&lt;/p&gt;
&lt;p&gt;Other option was host a blog on Blogger and redirect to custom domain. which again didn&#39;t seem right because external dependency on Google.(They can remove your blog without any warning if they feel like it. Doesn&#39;t matter if they actually do or don&#39;t, but they can)&lt;/p&gt;
&lt;p&gt;Now being from Technical background and my curiosity to learn , I turned to Static site generators. I have heard some great thing about &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; so thought why not give it a try.&lt;/p&gt;
&lt;p&gt;Hogo is a great choice as it has Github pages support and i can host entire thing for free with Github.&lt;/p&gt;
&lt;h2 id=&#34;setting-up-hugo-server-locally&#34;&gt;Setting up Hugo server locally.&lt;/h2&gt;
&lt;hr&gt;
&lt;/br&gt;
#### Installing Hugo
&lt;p&gt;There is entire section dedicated to installation for different environment &lt;a href=&#34;https://gohugo.io/getting-started/installing/&#34;&gt;detailed instructions&lt;/a&gt; .&lt;/p&gt;
&lt;h4 id=&#34;selecting-theme&#34;&gt;Selecting Theme&lt;/h4&gt;
&lt;p&gt;after browsing some themes (and there are too many themes) i decided to go with &lt;a href=&#34;https://github.com/mattbutton/silhouette-hugo&#34;&gt;silhouette-hugo&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;creating-a-new-project-template-and-forking-a-theme&#34;&gt;Creating a new project template and forking a theme.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;hugo new site &amp;lt;SITENAME&amp;gt;
cd &amp;lt;SITENAME&amp;gt;/themes
git clone https://github.com/mattbutton/silhouette-hugo.git
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adding-the-theme-to-projects-config-file&#34;&gt;Adding the theme to project&#39;s config file.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;cd..
echo &#39;theme = &amp;quot;silhouette-hugo&amp;quot;&#39; &amp;gt;&amp;gt; config.toml
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;starting-the-hugo-server-locally&#34;&gt;Starting the Hugo server locally&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Hugo server
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Once the Hugo is started ,site can be previewed on &lt;code&gt;http://localhost:1313&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;changing-the-site-data&#34;&gt;Changing the site data&lt;/h4&gt;
&lt;p&gt;Go to config.toml file of your project&#39;s main directory and from there you can change your sites configuration data like baseurl , title of site , social links etc&amp;hellip;&lt;/p&gt;
&lt;h4 id=&#34;using-some-css-to-slightly-change-look-and-feel-of-theme&#34;&gt;Using some CSS to slightly change look and feel of theme.&lt;/h4&gt;
&lt;p&gt;Navigate to &lt;SITENAME&gt;/themes/silhouette-hugo/assets/css&lt;/p&gt;
&lt;p&gt;Here resides the styles.css file. you can change the style of the theme by editing this file.&lt;/p&gt;
&lt;p&gt;[ One of the thing i love most about hugo is instant changes in site without any refresh. You could see the data changes in website as soom as you change/add css property.]&lt;/p&gt;
&lt;h4 id=&#34;deploy-site&#34;&gt;Deploy site&lt;/h4&gt;
&lt;p&gt;If you want to deploy the Hugo site to free GitHub pages, commit the project to your &lt;a href=&#34;https://github.com/&#34;&gt;Github&lt;/a&gt; account. Just name the repository as &lt;strong&gt;&amp;lt;Yourname&amp;gt;.github.io&lt;/strong&gt; and the github automatically builds the site into the &lt;strong&gt;http://&amp;lt;yourname&amp;gt;.github.io.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There is a another post for this if you would like to know the process of hosting Hugo blog on GIthub Pages.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>